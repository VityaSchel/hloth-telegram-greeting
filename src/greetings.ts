import { parse } from 'node-html-parser'
import { stripHtml } from 'string-strip-html'
import dedent from 'dedent'
import { DateTime } from 'luxon'

const entitiesMapping = {
  'b': 'messageEntityBold',
  'i': 'messageEntityItalic',
  's': 'messageEntityStrike',
  'a': 'messageEntityTextUrl',
  'u': 'messageEntityUnderline'
}

function convertHTMLToEntities(root, element = root) {
  let entities: { _: string, offset: number, length: number, url?: string }[] = []
  for(let child of element.childNodes) {
    if(child.constructor.name === 'HTMLElement') {
      const difference = start => {
        const htmlBeforeStart = root.outerHTML.substring(0, start+1)
        return htmlBeforeStart.length - stripHtml(htmlBeforeStart).result.length
      }

      entities.push({
        _: entitiesMapping[child.rawTagName],
        offset: child.range[0] - difference(child.range[0]),
        length: child.innerText.length,
        ...(child.rawTagName === 'a' && { url: child.getAttribute('href') })
      })
      if(child.childNodes) entities.push(...convertHTMLToEntities(root, child))
    }
  }
  return entities
}

function time() {
  const date = DateTime.now().setZone('Europe/Moscow')
  const time = date.toSeconds() - date.startOf('day').toSeconds()
  if(time < 60*60*5) return 0
  else if(time < 60*60*12) return 1
  else if(time < 60*60*19) return 2
  else return 3
}

export default user => {
  /* eslint-disable no-irregular-whitespace */
  const greetings = parse(dedent`
    <b>${['–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ', '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ', '–î–æ–±—Ä—ã–π –¥–µ–Ω—å', '–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä'][time()]}, ${user.first_name}!</b>

    –ë–ª–∞–≥–æ–¥–∞—Ä—é –í–∞—Å –∑–∞ –ø—Ä–æ—è–≤–ª–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Å –∫ –º–æ–µ–π –∫–∞–Ω–¥–∏–¥–∞—Ç—É—Ä–µ. –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –í–∞–º, –ø–æ—ç—Ç–æ–º—É –µ—Å–ª–∏ –í–∞—à \
    –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ —Å–æ –º–Ω–æ–π –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ IT-–ø—Ä–æ–¥—É–∫—Ç–æ–≤, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—Ä–∞–∑—É —É—Ç–æ—á–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–µ—Ç–∞–ª–∏:

    –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –æ–±—Å—É–¥–∏—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –∏–ª–∏ –≤–µ—Ä—Å—Ç–∫—É –≤–µ–±-—Å–∞–π—Ç–æ–≤ –∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, —É—Ç–æ—á–Ω–∏—Ç–µ –Ω–∞–ª–∏—á–∏–µ –º–∞–∫–µ—Ç–∞ –∏ \
    —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ–≥–æ.
    –ï—Å–ª–∏ –í—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –±–µ–∫–µ–Ω–¥–µ, —è –±—ã–ª –±—ã –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª–µ–Ω –∑–∞ —É—Ç–æ—á–Ω–µ–Ω–∏–µ –Ω–∞–ª–∏—á–∏—è —É –í–∞—Å
    —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ö–æ—Å—Ç–∏–Ω–≥–∞/VPS.

    –ú–æ–π –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–µ–∫ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: React, Next.js 13.5, Tailwind, TypeScript, Next.js, React-Native (expo). –ù–∞ Python –Ω–µ –ø–∏—à—É —Å 2020 –≥–æ–¥–∞. \
    –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∫–∏–ª–ª—ã –∏ –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –º–æ–µ–º <a href='https://hloth.dev'>—Å–∞–π—Ç–µ</a> –∏ <a href='https://cv.hloth.dev'>–≤ —Ä–µ–∑—é–º–µ</a>. \
    –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è –∏—â—É –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—É—é —Ä–∞–±–æ—Ç—É —Å —Ä–µ–ª–æ–∫–∞—Ü–∏–µ–π –≤ –ö–∞–Ω–∞–¥–µ. –ú–æ–µ <a href='https://hloth.dev/portfolio'>–ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ</a> \
    –∏ <a href='https://github.com/VityaSchel'>GitHub</a>.

    <b><u>–ù–µ–±–æ–ª—å—à–æ–π FAQ —Å —á–∞—Å—Ç–æ–∑–∞–¥–∞–≤–∞–µ–º—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏:</u></b>

    &!P  <b>–í—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ –ø–æ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–µ?</b>
    ‚Äî –î–∞, –Ω–∞—á–∏–Ω–∞—è —Å 2022 –≥–æ–¥–∞ —è —Ä–∞–±–æ—Ç–∞—é —Ç–æ–ª—å–∫–æ –ø–æ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–µ. 

    &!M  <b>–°–∫–æ–ª—å–∫–æ —ç—Ç–æ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å?</b>
    ‚Äî –Ø —Ä–∞–±–æ—Ç–∞—é –æ—Ç 4 –¥–æ 8 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å —Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –ø–æ –ø—è—Ç–Ω–∏—Ü—É, –º–æ—è —á–∞—Å–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ —ç—Ç–æ <b>50-75 –µ–≤—Ä–æ</b>, –Ω–æ –∏–Ω–æ–≥–¥–∞ —è –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞—é—Å—å –æ \
    —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ü–µ–Ω–µ –Ω–∞ –ø—Ä–æ–µ–∫—Ç –±–µ–∑ —É—á–µ—Ç–∞ –ø—Ä–∞–≤–æ–∫ (–≥–æ—Ç–æ–≤ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –ø–æ —á–∞—Å–∞–º –ø–æ –¢–ó). –î–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –≥–æ—Ç–æ–≤ —Å–¥–µ–ª–∞—Ç—å —Å–∫–∏–¥–∫—É –≤–ø–ª–æ—Ç—å –¥–æ 30 –µ–≤—Ä–æ –≤ —á–∞—Å.
    ‚Ä¢ –ë–æ—Ç—ã: –æ—Ç 100 ‚Ç¨
    ‚Ä¢ –í—ë—Ä—Å—Ç–∫–∞: –æ—Ç 300 ‚Ç¨
    ‚Ä¢ –°–∞–π—Ç—ã –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: –æ—Ç 500 ‚Ç¨

    &!C  <b>–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã</b>
    –Ø –ø—Ä–∏–Ω–∏–º–∞—é –æ–ø–ª–∞—Ç—É –Ω–∞ —Å—á–µ—Ç —Å–≤–æ–µ–≥–æ –±–∞–Ω–∫–∞ –¢–∏–Ω—å–∫–æ—Ñ—Ñ –∏ –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ –≤ –ª—é–±–æ–π —É–¥–æ–±–Ω–æ–π –¥–ª—è –≤–∞—Å –º–æ–Ω–µ—Ç–µ. <b>–í —Å–≤—è–∑–∏ —Å –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–º –∫—É—Ä—Å–æ–º —Ä—É–±–ª—è, —Å–µ–π—á–∞—Å —è –ø—Ä–∏–Ω–∏–º–∞—é –æ–ø–ª–∞—Ç—É –≤ —Ñ–∏–∞—Ç–µ \
    —Ç–æ–ª—å–∫–æ –≤ –µ–≤—Ä–æ (–ø–æ –∫—É—Ä—Å—É –ø–æ–∫—É–ø–∫–∏ —á–µ—Ä–µ–∑ –°–ë–ü –ø–æ –Ω–æ–º–µ—Ä—É –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è).</b> \
    –£ –º–µ–Ω—è –µ—Å—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∞–º–æ–∑–∞–Ω—è—Ç–æ–≥–æ. \
    –¢–∞–∫–∂–µ –≥–æ—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É –∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å –¥–æ–≥–æ–≤–æ—Ä –æ –Ω–µ—Ä–∞–∑–≥–ª–∞—à–µ–Ω–∏–∏.
    
    –ö—Å—Ç–∞—Ç–∏, –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ —ç—Ç–æ–≥–æ –∞–≤—Ç–æ‚Äë–æ—Ç–≤–µ—Ç—á–∏–∫–∞ <a href='https://github.com/VityaSchel/hloth-telegram-greeting'>–≤—ã–ª–æ–∂–µ–Ω</a> \
    –Ω–∞ –º–æ–µ–º GitHub. –ï—Å–ª–∏ –í—ã –µ—â–µ –Ω–µ –∑–∞–≥–ª—è–Ω—É–ª–∏ —Ç—É–¥–∞, –ø–æ—á–µ–º—É –±—ã –í–∞–º –Ω–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∏–º –∏ –¥—Ä—É–≥–∏–º–∏ –º–æ–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏?¬†üòâ
  `)

  return {
    greetingsText: greetings.innerText
      .replaceAll('&!P', 'üíº')
      .replaceAll('&!M', 'üíµ')
      .replaceAll('&!C', 'üí≥'),
    textEntities: convertHTMLToEntities(greetings)
  }
}

// &!P = üíº
// &!M = üíµ
// &!C = üí≥
